[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[project]
name = "cats"
authors = [
  { name = "CATS", email = "nstarman@users.noreply.github.com" },
]
description = "Community Atlas of Tidal Streams"
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
  "asdf",
  "dustmaps",
  "astropy",
  "astroquery",
  "gala",
  "galstreams",
  "matplotlib",
  "numba",
  "numpy",
  "pyia",
  "scipy>1.10",
  "ugali",
]

[project.optional-dependencies]
test = [
  "pytest >=6",
  "pytest-cov >=3",
]
dev = [
  "pytest >=6",
  "pytest-cov >=3",
]
docs = [
  "sphinx>=7.0",
  "myst_parser>=0.13",
  "sphinx_copybutton",
  "sphinx_autodoc_typehints",
  "furo>=2023.08.17",
]

[project.urls]
Homepage = "https://github.com/stellarstreams/cats"
"Bug Tracker" = "https://github.com/stellarstreams/cats/issues"
Discussions = "https://github.com/stellarstreams/cats/discussions"
Changelog = "https://github.com/stellarstreams/cats/releases"


[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/cats/_version.py"
envs.default.dependencies = [
  "pytest",
  "pytest-cov",
]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
  "ignore:numpy.ndarray size changed",
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]

[tool.codespell]
ignore-words-list = """
afe,
ue,
"""


[tool.coverage]
run.source = ["cats"]
port.exclude_lines = [
  'pragma: no cover',
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
]

[tool.mypy]
files = ["src", "tests"]
python_version = "3.9"
warn_unused_configs = true
strict = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "cats.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true


[tool.ruff]
src = ["src"]

[tool.ruff.lint]
extend-select = ["ALL"]
ignore = [
  "ANN101",  # Missing type annotation for self in method
  "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`
  "BLE001",  # Using bare `except`
  "COM812",  # Missing trailing comma
  "D107",  # Missing docstring in `__init__`
  "D203",  # 1 blank line required before class docstring
  "D213",  # Multi-line docstring summary should start at the second line
  "ERA001",  # Commented-out code
  "FIX002",  # Line contains TODO
  "N8",  # Naming conventions
  "N999",  # Invalid module name
  "PD",  # Pandas
  "PLR",    # Design related pylint codes
  "TD002",  # Missing author in TODO
  "TD003",  # Missing issue link on the line following this TODO
  # TODO: fix these and remove
  "ARG001",  # Unused function argument `X`
  "ARG003",  # Unused method argument `X`
  "F821",  # Undefined name `X`
  "RET505",  # Unnecessary `else` after `return`
  "SIM118",  # Use `key in dict` instead of `key in dict.keys()`
  "T201",  # `print` found
]
isort.required-imports = ["from __future__ import annotations"]
# Uncomment if using a _compat.typing backport
# typing-modules = ["cats._compat.typing"]

[tool.ruff.lint.per-file-ignores]
"docs/conf.py" = ["A001", "D100", "INP001"]
"scripts/**" = ["INP001"]
"tests/**" = ["ANN", "D1", "INP", "S101", "T20"]
"noxfile.py" = ["T20"]
"__init__.py" = ["F403"]
# TODO: fix these and remove
"src/cats/pawprint/tests/mwe.py" = ["F821"]


[tool.pylint]
py-version = "3.9"
ignore-paths = [".*/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "wrong-import-position",
  # TODO: fix these and remove
  "attribute-defined-outside-init",
  "duplicate-code",
  "invalid-name",
  "no-member",
  "unused-variable",
]
